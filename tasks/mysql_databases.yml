---
# Borrowed from percona xtradb cluster ansible role:
# https://github.com/cdelgehier/ansible-role-XtraDB-Cluster/blob/master/tasks/postinstall.yml
# Many thanks to Cedric DELGEHIER
- name: mysql_databases | create the databases
  community.mysql.mysql_db:
    name: "{{ item.name }}"
    state: present
    login_unix_socket: "{{ mariadb_login_unix_socket | default(omit) }}"
  with_items: "{{ mariadb_databases }}"
  become: true
  register: _db

- name: mysql_databases | copy database init scripts
  ansible.builtin.copy:
    src: "{{ item.item.init_script }}"
    dest: "/tmp/{{ item.item.init_script | basename }}"
    mode: "0600"
  with_items: "{{ _db.results }}"
  when:
    - item.changed
    - item.item.init_script is defined

- name: mysql_databases | initialise databases
  community.mysql.mysql_db:
    name: "{{ item.item.name }}"
    state: import
    target: "/tmp/{{ item.item.init_script | basename }}"
    login_unix_socket: "{{ mariadb_login_unix_socket | default(omit) }}"
  with_items: "{{ _db.results }}"
  become: true
  when:
    - item.changed
    - item.item.init_script is defined

- name: mysql_databases | delete init scripts from the server
  ansible.builtin.file:
    name: "/tmp/{{ item.item.init_script | basename }}"
    state: absent
  with_items: "{{ _db.results }}"
  when:
    - item.changed
    - item.item.init_script is defined

- name: Create table in seaweedfs database
  community.mysql.mysql_query:
    login_host: "localhost"
    login_port: 3306
    login_user: root
    login_password: "{{ mariadb_mysql_root_password }}"
    login_db: seaweedfs
    query: |
      CREATE TABLE IF NOT EXISTS `filemeta` (
        `dirhash`   BIGINT NOT NULL       COMMENT 'first 64 bits of MD5 hash value of directory field',
        `name`      VARCHAR(766) NOT NULL COMMENT 'directory or file name',
        `directory` TEXT NOT NULL         COMMENT 'full path to parent directory',
        `meta`      LONGBLOB,
        PRIMARY KEY (`dirhash`, `name`)
      ) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
  ignore_errors: true
  delegate_to: "{{ galera_mysql_first_node }}"
  run_once: true

- name: Apply MariaDB session settings
  community.mysql.mysql_query:
    login_user: "root"
    login_password: "{{ mariadb_mysql_root_password }}"
    login_host: "localhost"
    query: "{{ item }}"
  loop:
    - "SET GLOBAL slow_query_log = 1;"
    - "SET GLOBAL log_output = 'FILE';"
    - "SET GLOBAL long_query_time = 0;"
    - "SET GLOBAL log_slow_admin_statements = 1;"
    - "SET GLOBAL log_slow_slave_statements = 1;"
    - "UPDATE performance_schema.setup_consumers SET ENABLED = 'YES' WHERE NAME LIKE '%statements%';"
    - "SET GLOBAL innodb_monitor_enable = all;"
    - "INSTALL PLUGIN QUERY_RESPONSE_TIME_AUDIT SONAME 'query_response_time.so';"
    - "INSTALL PLUGIN QUERY_RESPONSE_TIME SONAME 'query_response_time.so';"
    - "SET GLOBAL query_response_time_stats = ON;"
    - "SET GLOBAL userstat = ON;"
  ignore_errors: true
  delegate_to: "{{ galera_mysql_first_node }}"
  run_once: true
